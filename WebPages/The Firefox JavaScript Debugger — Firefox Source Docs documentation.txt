https://firefox-source-docs.mozilla.org/devtools-user/debugger/index.html
The Firefox JavaScript Debugger — Firefox Source Docs documentation Firefox Source Docs Quick search Getting Started Getting Set Up To Work On The Firefox Codebase Working On Firefox Working on Firefox Bug Handling Firefox User Guide Firefox DevTools User Docs Source Code Documentation Firefox Front-end DOM Editor Layout & CSS Graphics Processes, Threads and IPC Firefox DevTools Contributor Docs Toolkit SpiderMonkey GeckoView WebIDL libpref Networking Remote Protocols Services File Handling Firefox on macOS Accessibility Code quality Writing Rust Code Gecko Profiler Performance XPCOM NSPR Network Security Services (NSS) The Firefox Build System Mach Pushing to Try Build System TaskCluster Task-Graph Generation Managing Documentation Testing & Test Infrastructure Testing Policy Configuration Changes Chrome Tests Marionette geckodriver Test Verification WebRender Tests XPCShell tests web-platform-tests GTest Fuzzing Sanitizer Performance Testing Code coverage Testing & Debugging Rust Code Localization & Internationalization Internationalization Localization Firefox and Python mozbase Using third-party Python packages Metrics Collected in Firefox Metrics Firefox Source Docs » The Firefox JavaScript Debugger Report an issue / View page source The Firefox JavaScript DebuggerÂ¶ The JavaScript Debugger enables you to step through JavaScript code and examine or modify its state to help track down bugs. You can use it to debug code running locally in Firefox or running remotely, for example on an Android device running Firefox for Android. See remote debugging to learn how to connect the debugger to a remote target. To find your way around the debugger, hereâ€™s a quick tour of the UI. How toÂ¶ To find out what you can do with the debugger, refer to the following how-to guides. Open the debugger Pretty-print a minified file Search Use a source map Debug worker threads Pause executionÂ¶ You probably want to pause the execution of your code, in order to see what is going on at various points. There are multiple ways to tell the Debugger how and when to pause: Set a breakpoint Set a conditional breakpoint Set an XHR breakpoint Set even listener Break on exceptions Use watchpoints for property reads and writes Break on DOM Mutation Disable breakpoints Control executionÂ¶ What can you do after execution pauses? Step through code Black box a source Debug worker threads Debug eval sources Look at valuesÂ¶ You probably want to see the value of variables or expressions, either during execution or when it is paused. Set a logpoint Set watch expressions ReferenceÂ¶ Keyboard shortcuts Source map errors Built with Sphinx using a theme provided by Read the Docs.
